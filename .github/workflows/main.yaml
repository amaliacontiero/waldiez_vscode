---
on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install Yarn
        run: |
            corepack enable
            yarn set version stable
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn run lint
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install Yarn
        run: |
            corepack enable
            yarn set version stable
      - name: Install dependencies
        run: yarn install
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Display Python version
        run: python --version
      - name: Run tests on ${{ matrix.os }}
        run: |
          apt update && apt install -y xvfb libasound2 libgbm1 libgtk-3-0 libnss3
          xvfb-run -a yarn run test
        if: runner.os == 'Linux'
      - name: Run tests on ${{ matrix.os }}
        run: yarn run test
        if: runner.os != 'Linux'

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install Yarn
        run: |
            corepack enable
            yarn set version stable
      - name: Install dependencies
        run: yarn install
      - name: Create VSIX
        id: create_vsix
        run: |
          yarn run build
          echo "generated<<EOF" >> $GITHUB_OUTPUT
          echo "$(ls -1 waldiez-vscode-*.vsix)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create Release
        if: success() && steps.create_vsix.outputs.generated
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          repository: ${{ github.repository }}
          files: |
            waldiez-vscode-*.vsix
      # - name: Publish
      #   run: yarn run deploy
      #   env:
      #     VSCE_PAT: ${{ secrets.VSCE_PAT }}
