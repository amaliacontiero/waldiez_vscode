---
on:
    push:
        branches:
        - main
    release:
        types:
        - created
jobs:
    build:
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Install Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20.x
        - name: Install python on windows
          uses: actions/setup-python@v5
          with:
            python-version: '3.12'
            update-environment: true
          if: matrix.os == 'windows-latest'
        - name: Display Python version
          run: python --version
        - run: corepack enable
        - run: yarn set version stable
        - run: yarn install
        - run: |
            apt update && apt install -y xvfb libasound2 libgbm1 libgtk-3-0 libnss3
            xvfb-run -a yarn run test
          if: runner.os == 'Linux'
        - run: yarn run test
          if: runner.os != 'Linux'
        - name: Create VSIX
          run: yarn run build
          if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        - name: Upload vsix as artifact
          uses: actions/upload-artifact@v4
          with:
            name: waldiez-vscode-${{ github.ref_name }}.vsix
            path: waldiez-vscode-${{ github.ref_name }}.vsix
          if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        - name: Create Release
          if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
          uses: softprops/action-gh-release@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref_name }}
            name: Release ${{ github.ref_name }}
            body: |
              Release ${{ github.ref_name }}
            draft: false
            prerelease: false
        # - name: Publish
        #   if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        #   run: yarn run deploy
        #   env:
        #     VSCE_PAT: ${{ secrets.VSCE_PAT }}
